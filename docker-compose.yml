services:
  locust:
    networks:
      - locust-net
    image: locust:latest
    container_name: locust
    build:
      context: .
    env_file: .env
    ports:
      - 3000:3000
    depends_on:
      - postgres-locust
      - influxdb
      - telegraf
      - flyway-locust

  postgres-locust:
    networks:
      - locust-net
    container_name: postgres-locust
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - postgres-locust:/var/lib/postgresql/data/

  flyway-locust:
    networks:
      - locust-net
    container_name: flyway-locust
    environment:
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_URL: jdbc:postgresql://postgres-locust:5432/${POSTGRES_DB}
      FLYWAY_SCHEMAS: public
    image: flyway/flyway:latest
    command: -locations=filesystem:/flyway/sql -connectRetries=60 migrate
    volumes:
      - ./migrations:/flyway/sql
    depends_on:
      - postgres-locust

  influxdb:
    networks:
      - locust-net
    image: influxdb:latest
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: ${DOCKER_INFLUXDB_INIT_MODE}
      DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
      DOCKER_INFLUXDB_INIT_USERNAME: ${DOCKER_INFLUXDB_INIT_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      INFLUXDB_DB: influx

  telegraf:
    networks:
      - locust-net
    image: telegraf:latest
    hostname: ${TELEGRAFCLIENT_HOST}
    ports:
      - 8092:8092
    volumes:
      - ./.docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: ${DOCKER_INFLUXDB_INIT_MODE}
      DOCKER_INFLUXDB_INIT_ORG: ${DOCKER_INFLUXDB_INIT_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${DOCKER_INFLUXDB_INIT_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      TELEGRAFCLIENT_HOST: ${TELEGRAFCLIENT_HOST}
      TELEGRAFCLIENT_PORT: ${TELEGRAFCLIENT_PORT}
      INFLUXDB_DB: influx


  grafana:
    networks:
      - locust-net
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - 4000:3000
    depends_on:
      - influxdb
    volumes:
      - ./.docker/grafana/provisioning:/etc/grafana/provisioning


networks:
  locust-net:
    external: false

volumes:
  postgres-locust:
